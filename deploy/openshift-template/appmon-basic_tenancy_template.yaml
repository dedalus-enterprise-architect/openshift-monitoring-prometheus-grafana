apiVersion: template.openshift.io/v1
kind: Template
labels:
  template: appmon-openshift-requirements
  app: appmon-dedalus
metadata:
  annotations:
    description: |-
      This template is created to be used only using `oc process`.
      It will create resources specific to integrate grafana operator to openshift.
      It will deploy a Grafana Instance with:
      - basic authentication
      - ephemereal storage
      A grafana Datasource with:
      - Prometheus type
      - connection to Prometheus service on port 9092
    iconClass: icon-d4center
    tags: dedalus
  name: appmon-openshift-requirements
objects:
- kind: Secret
  apiVersion: v1
  metadata:
    name: appmon-serviceaccount-api-token
    namespace: ${MONITORING_NAMESPACE}
    annotations:
      kubernetes.io/service-account.name: ${APPMON_SERVICEACCOUNT}
    labels:
      app: appmon-dedalus
  type: kubernetes.io/service-account-token
- kind: ServiceAccount
  apiVersion: v1
  metadata:
    namespace: ${MONITORING_NAMESPACE}
    name: ${APPMON_SERVICEACCOUNT}
    labels:
      app: appmon-dedalus
  secrets:
    - name: appmon-serviceaccount-api-token
- kind: ClusterRole
  apiVersion: rbac.authorization.k8s.io/v1 
  metadata:
    name: aggregate-grafana-view
    labels:
      rbac.authorization.k8s.io/aggregate-to-view: "true" 
      rbac.authorization.k8s.io/aggregate-to-cluster-reader: "true" 
  rules:
  - apiGroups:
    - grafana.integreatly.org
    resources:
    - grafanas
    - grafanadashboards
    - grafanadatasources
    - grafanafolders
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - grafana.integreatly.org
    resources:
    - grafanas/status
    - grafanadashboards/status
    - grafanadatasources/status
    - grafanafolders/status
    verbs:
    - get
- kind: ClusterRole
  apiVersion: rbac.authorization.k8s.io/v1 
  metadata:
    name: aggregate-grafana-editor
    labels:
      rbac.authorization.k8s.io/aggregate-to-admin: "true" 
      rbac.authorization.k8s.io/aggregate-to-edit: "true" 
  rules:
  - apiGroups:
    - grafana.integreatly.org
    resources:
    - grafanas
    - grafanadashboards
    - grafanadatasources
    - grafanafolders
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - grafana.integreatly.org
    resources:
    - grafanas/status
    - grafanadashboards/status
    - grafanadatasources/status
    - grafanafolders/status
    verbs:
    - get
    - list
    - watch
    - create
    - update
    - patch
    - delete
    - deletecollection
- kind: Grafana
  apiVersion: grafana.integreatly.org/v1beta1
  metadata:
    namespace: ${MONITORING_NAMESPACE}
    name: ${GRAFANA_INSTANCE_NAME}
    labels:
      app: appmon-dedalus
      dashboards: "${GRAFANA_INSTANCE_NAME}"
  spec:
    route:
      spec: {}
    client:
      preferIngress: false
    config:
      log:
        level: warn
        mode: console
      auth.anonymous:
        enabled: "false"
      auth:
        disable_login_form: "false"
        disable_signout_menu: "false"
      auth.basic:
        enabled: "true"
- kind: GrafanaDatasource
  apiVersion: grafana.integreatly.org/v1beta1
  metadata:
    namespace: ${MONITORING_NAMESPACE}
    name: prometheus-tenancy-${TARGET_NAMESPACE}
    labels:
      app: appmon-dedalus
  spec:
    valuesFrom:
      - targetPath: "secureJsonData.httpHeaderValue1"
        valueFrom:
          secretKeyRef:
            name: "appmon-serviceaccount-api-token"
            key: "token"
    instanceSelector:
      matchLabels:
        dashboards: "${GRAFANA_INSTANCE_NAME}"
    allowCrossNamespaceImport: true
    datasource:
      access: proxy
      editable: true
      isDefault: false
      jsonData:
        httpMethod: GET
        httpHeaderName1: Authorization
        timeInterval: 5s
        tlsSkipVerify: true
        customQueryParameters: "namespace=${TARGET_NAMESPACE}"
      name: Prometheus-${TARGET_NAMESPACE}
      secureJsonData:
        httpHeaderValue1: >-
          Bearer ${token}
      type: prometheus
      url: 'https://${THANOS_URL}'
parameters:
- name: MONITORING_NAMESPACE
  displayName: Type the Namespace "name"
  description: Namespace "name" that will be created and where all the resources of AppMon will be deployed
  required: true
  value: dedalus-monitoring
- name: APPMON_SERVICEACCOUNT
  displayName: Type the ServiceAccount "name"
  description: The service account that will be created and used by AppMon resources
  required: true
  value: appmon-serviceaccount
- name: GRAFANA_INSTANCE_NAME
  displayName: Type a name for the Grafana Instance
  description: This value will be also used to attacch the Dashboards and Datasources created by this template to the instance
  required: true
  value: appmon-basic-tenancy
- name: THANOS_URL
  displayName: Prometheus URL
  description: Type the Prometheus URL you can use the service on port 9091 or 9092
  required: true
  value: thanos-querier.openshift-monitoring.svc.cluster.local:9092
- name: TARGET_NAMESPACE
  displayName: Openshift namespace for the custom query
  description: Type the namespace where to limit the datasource
  required: true
